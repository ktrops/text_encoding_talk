{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red28\green28\blue28;\red247\green247\blue247;\red10\green0\blue109;
\red9\green47\blue157;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 slids for encoding\
\
1) history of encoding \
	* one character was assigned to one pattern of encoded bits (this assumption dated back to the old telegraph codes)\
\
Bacon;s cipher creator Francis Bacon Year: 1605\
A group of 5 letters \'93A\'94 or \'93B\'94\
\pard\pardeftab720

\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\
\
Chinese_telegraph codes\
\pard\pardeftab720

\f0 \cf2 \cb1 \expnd0\expndtw0\kerning0
({\field{\*\fldinst{HYPERLINK "http://en.wikipedia.org/wiki/Hans_Schjellerup"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
Hans Schjellerup}}, 1869)
\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://en.wikipedia.org/wiki/Chinese_telegraph_code#/media/File:Obsolete_chinese_telegraph_code.jpg"}}{\fldrslt \cf2 http://en.wikipedia.org/wiki/Chinese_telegraph_code#/media/File:Obsolete_chinese_telegraph_code.jpg}}\
\
morse code 1840s\
\
\
In the 1980\'92s they needed a solution to represent a larger repatoir of characters that included the family of East Asian scripts, but memory was expensive. And most of computer users were still used the Latin alphabet and arabic numerals.\
\
Unicode encodes the underlying characters or graphemes and not the rendering or glyphs. When processing the characters unicode use code points to uniquely code each character. other softer ware like html and word processing renders the characters. it has a variable width encoding depending on the contex \
\
talk more about variable width encoding.\
\
Character encoding form \
\
unicode uses 21-bit code space\
\
Unicode transformation format\
\
ASCII 7-bit code 0 to 127\
UTF-8 maps ASCII with 1 byte\
\
UTF-8\
UTF-8 uses a sequence of one to four 8 bit bytes \
\
\
utf-8 uses one byte for the 127 Ascii code characters. The next 1,920 characters need \
utf-8 renders the same. because it uses 0 or 11 to signal the start of a character. O don\'92t have to worry about Big Endian and little Endian\
http://www.cs.umd.edu/class/sum2003/cmsc311/Notes/Data/endian.html\
Big Endian\
Most significant byte in the smallest address\
\
little Endian \
Least significant byte in the smallest address\
\
\
utf-16 uses one to two  16-bit code units\
\
utf-32 uses one code unit\
\
\
surrogates map characters that are outside the Basic Multilingual Plane (BMP). The BMP represents 64,000 characters in Unicode. \
can\'92t generate <110xxxxx^-2 0xxxxxxx^-2> it will either filter out the character or represent the byte with a marker such as FFFD(replacement Character) \
\
}